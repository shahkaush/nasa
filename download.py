import os
import requests

# List of PMC IDs
pmc_ids = [
"PMC7555797",
"PMC3545801",
"PMC3869332",
"PMC4135744",
"PMC3911009",
"PMC4923109",
"PMC11673879",
"PMC5648920",
"PMC5817088",
"PMC7825584",
"PMC8904044",
"PMC3012082",
"PMC11088941",
"PMC3187170",
"PMC3133089",
"PMC3242767",
"PMC3067220",
"PMC3251573",
"PMC3647661",
"PMC4085587",
"PMC4096993",
"PMC7467030",
"PMC4427280",
"PMC5460263",
"PMC6204695",
"PMC7943786",
"PMC11888247",
"PMC3851762",
"PMC8067245",
"PMC8044432",
"PMC9701605",
"PMC11166648",
"PMC11166662",
"PMC3838407",
"PMC3748764",
"PMC2925951",
"PMC3350920",
"PMC3422896",
"PMC11869762",
"PMC10712242",
"PMC6143729",
"PMC10058394",
"PMC4103452",
"PMC8024390",
"PMC6348315",
"PMC6359015",
"PMC7667275",
"PMC7756144",
"PMC8169688",
"PMC8475764",
"PMC9098553",
"PMC10503492",
"PMC9693084",
"PMC3792163",
"PMC4430214",
"PMC5045078",
"PMC5443495",
"PMC5666744",
"PMC5865701",
"PMC6337482",
"PMC9953463",
"PMC10487739",
"PMC11942576",
"PMC4052902",
"PMC8539686",
"PMC10800490",
"PMC7756143",
"PMC3066201",
"PMC11324864",
"PMC3665236",
"PMC10470837",
"PMC10386755",
"PMC8896891",
"PMC8430797",
"PMC5460135",
"PMC10774393",
"PMC6126739",
"PMC4411111",
"PMC6126739",
"PMC9445043",
"PMC3509447",
"PMC5600826",
"PMC10831389",
"PMC10831389",
"PMC4507784",
"PMC4349987",
"PMC6638264",
"PMC6130020",
"PMC9695374",
"PMC6141014",
"PMC6706399",
"PMC12034070",
"PMC7235020",
"PMC7599661",
"PMC8493566",
"PMC10926278",
"PMC6069985",
"PMC9856674",
"PMC9410522",
"PMC10344948",
"PMC4750446",
"PMC7162976",
"PMC11353732",
"PMC11953390",
"PMC9737020",
"PMC5515519",
"PMC10144393",
"PMC10719374",
"PMC11096397",
"PMC11166655",
"PMC7937622",
"PMC7055474",
"PMC7118179",
"PMC4494396",
"PMC8323809",
"PMC8886715",
"PMC8890767",
"PMC9487896",
"PMC10142442",
"PMC11477029",
"PMC4309301",
"PMC11166981",
"PMC6343501",
"PMC7138367",
"PMC6689164",
"PMC3564669",
"PMC4042434",
"PMC4161659",
"PMC4917201",
"PMC4985531",
"PMC5421618",
"PMC5515514",
"PMC8671758",
"PMC5771473",
"PMC5288125",
"PMC5389344",
"PMC9784906",
"PMC6548323",
"PMC6597714",
"PMC6865368",
"PMC7907224",
"PMC8213760",
"PMC9582271",
"PMC10063413",
"PMC10889206",
"PMC8468678",
"PMC9031868",
"PMC10030976",
"PMC5910807",
"PMC12021249",
"PMC6057834",
"PMC6876156",
"PMC7415877",
"PMC7285199",
"PMC9549344",
"PMC7530743",
"PMC7890410",
"PMC9640571",
"PMC9862956",
"PMC10410709",
"PMC10751425",
"PMC10605753",
"PMC10846184",
"PMC11166967",
"PMC11302229",
"PMC11487192",
"PMC3554398",
"PMC10370681",
"PMC4624184",
"PMC4945788",
"PMC9116463",
"PMC5201052",
"PMC5391430",
"PMC5504618",
"PMC5580210",
"PMC8421509",
"PMC5552977",
"PMC5805884",
"PMC5864415",
"PMC6013642",
"PMC5578834",
"PMC9241228",
"PMC5958250",
"PMC7326050",
"PMC6251167",
"PMC6280456",
"PMC9098231",
"PMC9116463",
"PMC6426649",
"PMC6452512",
"PMC6529585",
"PMC6952069",
"PMC7303416",
"PMC7317102",
"PMC7393961",
"PMC7484075",
"PMC7516158",
"PMC7561690",
"PMC7595942",
"PMC7677455",
"PMC8005752",
"PMC8104057",
"PMC12034939",
"PMC8012687",
"PMC8086211",
"PMC8211661",
"PMC11988970",
"PMC8754149",
"PMC8875396",
"PMC9258157",
"PMC9503880",
"PMC9743659",
"PMC10233975",
"PMC10308117",
"PMC10715203",
"PMC10628120",
"PMC10960378",
"PMC10628120",
"PMC11451251",
"PMC5523082",
"PMC6590338",
"PMC6036641",
"PMC6599637",
"PMC8274610",
"PMC8131644",
"PMC9163032",
"PMC5568470",
"PMC5485990",
"PMC5460239",
"PMC6275019",
"PMC5397022",
"PMC7251690",
"PMC10284894",
"PMC10030976",
"PMC8421509",
"PMC9964234",
"PMC10793275",
"PMC4116675",
"PMC5810432",
"PMC10261121",
"PMC8739323",
"PMC8739323",
"PMC9502502",
"PMC10432549",
"PMC7261848",
"PMC8537831",
"PMC8879990",
"PMC10472590",
"PMC11999716",
"PMC11969330",
"PMC11940681",
"PMC11941215",
"PMC11892206",
"PMC11748630",
"PMC11659408",
"PMC11701653",
"PMC11593819",
"PMC11477029",
"PMC11487192",
"PMC11484870",
"PMC11451251",
"PMC11403809",
"PMC11386075",
"PMC11362537",
"PMC11339457",
"PMC11324864",
"PMC11353732",
"PMC11271499",

]

# Folder to save PDFs
PDF_FOLDER = "pdfs"
os.makedirs(PDF_FOLDER, exist_ok=True)

headers = {"User-Agent": "Mozilla/5.0"}

for pmc_id in pmc_ids:
    try:
        pdf_url = f"https://europepmc.org/articles/{pmc_id}?pdf=render"
        print( pmc_id )

        r = requests.get(pdf_url, headers=headers, timeout=60, stream=True)
        r.raise_for_status()

        # Extract file name from Content-Disposition header if available
        cd = r.headers.get("content-disposition")
        if cd and "filename=" in cd:
            filename = pmc_id + '_' + cd.split("filename=")[-1].strip('" ')
        else:
            filename = f"{pmc_id}.pdf"

        file_path = os.path.join(PDF_FOLDER, filename )

        # Save file
        with open(file_path, "wb") as f:
            for chunk in r.iter_content(8192):
                if chunk:
                    f.write(chunk)

        # print(f"✅ Saved: {filename} ({os.path.getsize(file_path)/1024/1024:.2f} MB)")

    except Exception as e:
        print( '' )
        print(f"⚠️ Failed for {pmc_id}: {e}")
